---
description: 
globs: 
alwaysApply: true
---
# Project Structure Overview

This project is a Vite-based React application built with TypeScript and styled with Tailwind CSS. It also includes a directory for serverless functions.

## Key Directories

*   **`src/`**: Contains all the frontend application source code.
    *   **[`src/components/`](mdc:src/components)**: Houses reusable UI components.
        *   **[`src/components/ui/`](mdc:src/components/ui)**: Contains generic, base UI components.
    *   **[`src/contexts/`](mdc:src/contexts)**: Used for React Context API to manage global state or pass data through the component tree.
    *   **[`src/pages/`](mdc:src/pages)**: Contains components that represent entire pages or views of the application.
    *   **[`src/services/`](mdc:src/services)**: Intended for modules handling API calls, business logic, or other non-UI related operations.
    *   **[`src/types/`](mdc:src/types)**: Stores TypeScript type definitions and interfaces for type safety.
*   **`functions/`**: Contains serverless functions.
    *   **[`functions/api/`](mdc:functions/api)**: Likely houses API endpoint implementations.
    *   **`functions/config/`**: Contains configuration files for the serverless functions.
    *   **`functions/services/`**: Houses business logic for the serverless functions.
        *   **`functions/services/__tests__/`**: Contains tests for the serverless function services.
    *   **`functions/types/`**: Stores TypeScript type definitions and interfaces for the serverless functions.
*   **`.bolt/`**: Configuration or operational directory, possibly related to a specific toolchain or deployment process.
*   **`.wrangler/`**: Configuration and state directory for Wrangler, the command-line tool for Cloudflare Workers.
*   **[`public/`](mdc:public)**: Contains static assets like images or fonts that are copied to the build output directory.
*   **[`clients/`](mdc:clients)**: Contains code for different client applications.
    *   **[`clients/ios-shortcut/`](mdc:clients/ios-shortcut)**: Code for the iOS Shortcut client.
    *   **[`clients/raycast-extension/`](mdc:clients/raycast-extension)**: Code for the Raycast Extension client.
*   **[`docs/`](mdc:docs)**: Contains project documentation.
*   **[`extension/`](mdc:extension)**: Contains code for a browser extension.
    *   **[`extension/assets/`](mdc:extension/assets)**: Assets for the browser extension.
    *   **[`extension/src/`](mdc:extension/src)**: Source code for the browser extension.

## Important Files in `src/`

*   **`src/main.tsx`**: The entry point of the React application. It renders the root component into the main HTML file.
*   **`src/App.tsx`**: The main application component, typically defining the overall layout, routing, and structure.
*   **`src/index.css`**: Global CSS styles or imports for styling frameworks like Tailwind CSS.
*   **`src/vite-env.d.ts`**: TypeScript declaration file for Vite-specific environment variables.

## Root Directory Configuration Files

*   **[`index.html`](mdc:index.html)**: The main HTML template file into which the application is injected.
*   **[`package.json`](mdc:package.json)**: Defines project metadata, dependencies, and scripts (e.g., `dev`, `build`, `lint`).
*   **[`vite.config.ts`](mdc:vite.config.ts)**: Configuration file for Vite, the build tool and development server.
*   **[`tailwind.config.js`](mdc:tailwind.config.js)**: Configuration file for Tailwind CSS.
*   **[`postcss.config.js`](mdc:postcss.config.js)**: Configuration for PostCSS.
*   **[`tsconfig.json`](mdc:tsconfig.json)** (and variants like `tsconfig.app.json`, `tsconfig.node.json`): TypeScript compiler configuration files.
*   **[`eslint.config.js`](mdc:eslint.config.js)**: ESLint configuration for code linting.
*   **`.dev.vars`**: Environment variables for development, often used by Cloudflare Workers.
*   **`.env`**: General environment variables.
*   **`.gitignore`**: Specifies intentionally untracked files that Git should ignore.
*   **[`README.md`](mdc:README.md)**: Project documentation.
*   **[`wrangler.toml`](mdc:wrangler.toml)**: Configuration file for Wrangler, the CLI for Cloudflare Workers.
*   **[`vitest.setup.ts`](mdc:vitest.setup.ts)**: Setup file for Vitest, a Vite-native testing framework.
*   **`package-lock.json`**: Records the exact versions of dependencies used by the project.
*   **`.npmrc`**: Configuration file for the npm package manager.
*   **[`LICENSE`](mdc:LICENSE)**: Contains the software license for the project.

## Development Workflow

To run the development server with hot-reloading:
```bash
npm run dev
```
This command uses Vite to serve the application, typically at `http://localhost:5173/`.

To run or emulate functions, you might use Wrangler commands, for example:
```bash
npx wrangler dev
```
(Check `package.json` for specific scripts related to functions development).
